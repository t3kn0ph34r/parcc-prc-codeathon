<?php

/**
 * @file
 * Alters to user edit forms.
 */

/**
 *  Implements hook_block_view_alter().
 */
function prc_search_block_view_alter(&$data, $block) {
  if ($block->module == 'search') {
    if (isset($data) && is_array($data) &&
        array_key_exists('content', $data) &&
        array_key_exists('search_block_form', $data['content'])) {
      // Adding placeholder text
      $data['content']['search_block_form']['#attributes']['placeholder'] = t('Search');
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function prc_search_form_search_form_alter(&$form, &$form_state) {

  // Adding placeholder text
  $form['basic']['keys']['#attributes']['placeholder'] = t('Search');

  // Here we are adding Search results for: criteria
  // if the user has performed a search
  $criteria = $form['basic']['keys']['#default_value'];
  if ($criteria) {
    $criteria = filter_xss($criteria, array());

    $criteria_markup = "<h2>Search results for: $criteria</h2>";

    $form['include_criteria'] = array(
      '#type' => 'markup',
      '#markup' => $criteria_markup,
    );
  }
}

/**
 * Hack into and re-process a block search form submission.
 */
function prc_search_form_search_form_submit($form, &$form_state) {
  // We're using the stock search block, just, cuz, y'know...
  // But instead of going to the default node search, we want
  // to go to our super awesome search view.
  // We hijack the redirect and set our own URL here.
  $form_id = $form['form_id']['#value'];
  $form_state['redirect'] = array('search-content/search_api_views_fulltext', array('query' => array('search_api_views_fulltext' => trim($form_state['values'][$form_id]))));
}


/**
 *  Implements hook_form_alter().
 */
function prc_search_form_search_block_form_alter(&$form, &$form_state, $form_id) {
  $form['#validate'][] = 'prc_search_form_search_form_validate';
  $form['#submit'][] = 'prc_search_form_search_form_submit';
}

function prc_search_form_search_form_validate(&$form, &$form_state) {
  // Check we got an previous error from SearchQuery that we want to dismiss.
  if (form_get_errors()) {
    $q = arg();
    // Reset the current search text. If there was an error before this
    // part of the URL will retain the old, invalid criteria.
    $q[count($q) - 1] = $form_state['values'][current(array_keys($form))];
    // Clear error messages as user has already seen this error before.
    drupal_get_messages();
    // Goto the correct search page.
    $new_search_url = implode('/', $q);
    drupal_goto($new_search_url);
  }
}