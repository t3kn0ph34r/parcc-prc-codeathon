<?php

/**
 * @file
 * Alters to question forms.
 */

/**
 * Implements hook_menu().
 */
function prc_question_form_menu() {
  $items = array();
  $items['node/%node/questionedit'] = array(
    'title' => 'Edit PRC Interactive Choice Question',
    'page callback' => 'prc_question_form_custom_multichoice',
    'page arguments' => array(1),
    'access callback' => 'node_access',
    'access arguments' => array('update', 1),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Menu callback; presents the node editing form.
 */
function prc_question_form_custom_multichoice($node) {
  $type_name = node_type_get_name($node);
  drupal_set_title(t('<em>Edit @type</em> @title', array('@type' => $type_name, '@title' => $node->title)), PASS_THROUGH);
  return drupal_get_form('prc_question_form_custom_multichoice_form', $node);
}

function prc_question_form_custom_multichoice_form($form, &$form_state) {
  $node = $form_state['build_info']['args'][0];

  module_load_include('inc', 'node', 'node.pages');
  $node_form = new stdClass;
  $node_form->type = $node->type;
  $node_form->language = LANGUAGE_NONE;
  $original_form = drupal_get_form($node->type . '_node_form', $node_form);

  $form = array();

  $form['title'] = $original_form['title'];
  $form['body'] = $original_form['body'];
  $form['field_standard'] = $original_form['field_standard'];
//  $form['title'] = array(
//    '#type' => 'textfield',
//    '#title' => t('Item Title'),
//    '#default_value' => isset($node->title) ? $node->title : '',
//    '#required' => TRUE,
//  );
//
//  $form['body'] = array(
//    '#type' => 'textarea',
//    '#weight' => 2,
//    '#tree' => true,
//    '#title' => 'Question (Item Stem)',
//    '#required' => TRUE,
//  );
//
//  $form['standard'] = array(
//
//  );

  return $form;
}

/**
 * Implements hook_form_FORM_ID_alter
 *
 * Changes the title of the registration form
 *
 * @param $form
 * @param $form_state
 */
function prc_question_form_form_multichoice_node_form_alter(&$form, &$form_state) {

  $form['feedback']['#access'] = FALSE;
  $form['title']['#title'] = t('Item Title');
  $form['title']['#required'] = TRUE;

  $form['alternatives']['settings']['choice_random']['#access'] = FALSE;
  $form['alternatives']['settings']['choice_boolean']['#access'] = FALSE;

  $form['field_standard'][LANGUAGE_NONE]['#title'] = t('Item Standard');
  $form['field_standard'][LANGUAGE_NONE]['#required'] = TRUE;

  $form['alternatives']['#title'] = 'Answer Choice (Distractor)';

  $choice_count = $form_state['choice_count'];

  for($c = 0; $c < $choice_count; $c++) {
    $form['alternatives'][$c]['advanced']['#access'] = FALSE;
    $form['alternatives'][$c]['remove'] = array(
      '#type' => 'link',
      '#title' => t('X'),
      '#href' => '',
      '#attributes' => array('class' => array('item-mc-remove')),
    );
  }

  array_unshift($form['#validate'], 'prc_question_form_form_multichoice_node_form_validate');

  // Set the path to script.
  $script = drupal_get_path('module', 'prc_question_form') . '/prc_question_form_mc_item.js';

  drupal_add_js($script, array('scope' => 'header'));

//  $form['#validate'][] = 'prc_question_form_form_multichoice_node_form_validate';

}

function prc_question_form_form_multichoice_node_form_validate(&$form, &$form_state) {
  $x = 'x';

//  $choice_count = $form_state['choice_count'];

//  $format = $form['alternatives'][0]['answer']['#format']; // filtered_html

  // Rebuild the answer array here to make it look like how it will look with
  // a text filter selection.

//  for($c = 0; $c < $choice_count; $c++) {
//    // use form_set_value
////    $form['alternatives'][$c]['orig_answer']['#value'] = $form['alternatives'][$c]['answer']['#value'];
//    $form_state['values']['node']['alternatives'][$c]['answer'] = array(
//      'format' => 'filtered_html',
//      'value' => 'filtered_html'
//    );
//
//  }
}

/**
 *  Implements hook_form_alter().
 */
function prc_question_form_form_alter(&$form, &$form_state, $form_id) {
  $x = 'x';
}