<?php

/**
 * @file
 * Alters to user edit forms.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 * @param $form
 * @param $form_state
 */
function prc_user_edit_form_form_user_profile_form_alter(&$form, &$form_state) {
  global $user;
  if (!array_search('administrator', $user->roles)) {
    $form['account']['mail']['#title'] = 'E-mail';
    $form['picture']['#access'] = FALSE;
    $form['account']['name']['#access'] = FALSE;
    $form['field_member_state']['#access'] = FALSE;
  }

  if (user_access('administer users')) {
    $form['field_member_state']['#access'] = TRUE;
  }

  $form['account']['roles']['#required'] = TRUE;

  _prc_user_edit_form_title($form);

  $profession_weight = $form['field_user_state']['#weight'];

  $account_wrapper = entity_metadata_wrapper('user', $form_state['build_info']['args'][0]);

  $my_uid = $user->uid;
  $edit_uid = $form_state['build_info']['args'][0]->uid;

  if ($my_uid == $edit_uid && !$account_wrapper->field_member_state->value()) {
    _prc_registration_state_account_number_fields($form, $profession_weight);
  }

  $form['#validate'][] = 'prc_user_edit_form_form_user_profile_form_validate';
  $form['#validate'][] = 'prc_user_edit_form_form_user_profile_form_submit';

}

/**
 * @param $form
 */
function _prc_user_edit_form_title(&$form) {
  $w = entity_metadata_wrapper('user', $form['#user']);
  $first = $w->field_first_name->value();
  $last = $w->field_last_name->value();
  $uid = $w->uid->value();
  $title = "$first $last ($uid)";
  drupal_set_title($title);
}

function prc_user_edit_form_form_user_profile_form_validate(&$form, &$form_state) {
  # If validation fails, the form_alter won't change the title again. Set it here.
  _prc_user_edit_form_title($form);

  $role_field = 'roles';
  $rids = $form_state['values'][$role_field];
  _prc_invite_form_validate_trt_roles($rids, $role_field);

}

function prc_user_edit_form_form_user_profile_form_submit(&$form, &$form_state) {
  if (_prc_registration_state_account_number_submit($form_state)) {
    $roles = user_roles(TRUE);
    $educator_role_name = 'PARCC-Member Educator';
    $new_rid = array_search($educator_role_name, $roles);
    $form_state['values']['roles'][$new_rid] = $new_rid;

    drupal_set_message(t('You have successfully entered a valid PARCC member state code.'));
  };
}
