<?php

/**
 * @file Hooks and configuration pertaining to the editing workflow of the PRC site.
 */


/**
 * Implements hook_permission
 *
 * @return array
 */
function prc_workflow_permission(){
  return array(
    'request approval of prc content' => array(
      'title' => t('Request Approval of PRC content'),
      'description' => t('Request that content be approved and published through the PRC workflow.'),
    ),
    'approve prc content' => array(
      'title' => t('Publish PRC content'),
      'description' => t('Approve and publish content managed through the PRC workflow.'),
    ),
    'deny prc content' => array(
      'title' => t('Deny PRC content'),
      'description' => t('Deny publishing of content managed through the PRC workflow.')
    ),
    'unpublish prc content' => array(
      'title' => t('Unpublish PRC content'),
      'description' => t('Move content managed through the PRC workflow from published back to draft'),
    ),
  );
}


/**
 * Implements hook_state_flow_plugins()
 */
function prc_workflow_state_flow_plugins(){
  $info = array();

  $info['prc_workflow'] = array(
    'handler' => array(
      'parent' => 'state_flow',
      'class' => 'prcWorkflow',
      'file' => 'prcWorkflow.inc',
      'path' => drupal_get_path('module', 'prc_workflow').'/plugins',
    )
  );

  return $info;
}

/**
 * Implements hook_state_flow_machine_type_alter()
 *
 * @param string $machine_type
 * @param object $node
 */
function prc_workflow_state_flow_machine_type_alter(&$machine_type, $node) {
  $machine_type = '';
  if($node->type === 'digital_library_content'){
    $machine_type = 'prc_workflow';
  }
}