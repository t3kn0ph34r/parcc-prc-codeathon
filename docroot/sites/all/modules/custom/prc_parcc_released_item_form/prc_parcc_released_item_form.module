<?php

/**
 * @file
 * Changes to PARCC Released Items Form.
 */

/**
 * Implements hook_form_FORM_ID_alter
 *
 * Makes Subject and Standard fields required.
 *
 * @param $form
 * @param $form_state
 */
function prc_parcc_released_item_form_form_parcc_released_item_node_form_alter(&$form, &$form_state) {
  $form['field_subject'][LANGUAGE_NONE]['#required'] = TRUE;
  $form['faux_subject'] = array(
    '#type' => 'hidden',
  );
  $form['field_standard'][LANGUAGE_NONE]['#required'] = TRUE;
  $form['faux_standard'] = array(
    '#type' => 'hidden',
  );

  $form['#validate'][] = 'prc_parcc_released_item_form_subject_required_validate';
  $form['#validate'][] = 'prc_parcc_released_item_form_standard_required_validate';
}

function prc_parcc_released_item_form_subject_required_validate(&$form, &$form_state) {
  _prc_question_form_shs_term_required_validate('subject', 'Subject', $form, $form_state);
}

function prc_parcc_released_item_form_standard_required_validate(&$form, &$form_state) {
  _prc_question_form_shs_term_required_validate('standard', 'Standard', $form, $form_state);
}

/**
 *  Implements hook_node_grants().
 */
function prc_parcc_released_item_form_node_grants($account, $op) {
  $grants = array();

  if (user_access('access members-only content', $account)) {
    $grants['prc_parcc_released_item_permissions'] = array(1);
  }
  if (user_access('create parcc_released_item content', $account)) {
    $grants['prc_parcc_released_item_permissions_editor'] = array(1);
  }
  if (user_is_logged_in()) {
    $grants['authenticated'] = array(1);
  }

  return $grants;

}

/**
 *  Implements hook_node_access_records().
 */
function prc_parcc_released_item_form_node_access_records($node) {
  // We only care about the node if it has been marked private. If not, it is
  // treated just like any other node and we completely ignore it.
  if ($node->type == 'parcc_released_item') {
    $w = entity_metadata_wrapper('node', $node);
    $is_members_only = $w->field_released_item_permissions->value() == 'members';
    $is_registered = $w->field_released_item_permissions->value() == 'registered';
    $grants = array();

    // If it's a parcc_released_item and it's set to registered, we need to
    // disallow anonymous
    if ($is_registered) {
      $grants[] = array(
        'realm' => 'authenticated',
        'gid' => 1,
        'grant_view' => 1,
        'grant_update' => 0,
        'grant_delete' => 0,
        'priority' => 0,
      );
    }

    if ($is_members_only) {
      // Grant access to parcc_released_item creators
      $grants[] = array(
        'realm' => 'prc_parcc_released_item_permissions_editor',
        'gid' => 1,
        'grant_view' => 1,
        'grant_update' => 1,
        'grant_delete' => 1,
        'priority' => 0,
      );
      // Only published nodes should be viewable to all users. If we allow access
      // blindly here, then all users could view an unpublished node.
      if ($node->status) {
        $grants[] = array(
          'realm' => "prc_parcc_released_item_permissions",
          'gid' => 1,
          'grant_view' => 1,
          'grant_update' => 0,
          'grant_delete' => 0,
          'priority' => 0,
        );
      }
    }

    return $grants;
  }
}
